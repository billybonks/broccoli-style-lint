// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Broccoli StyleLint Plugin Generated Tests when grouping is false generates correct failing test string 1`] = `
"QUnit.module('Stylelint');
QUnit.test('has-errors.scss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(false, '1:15 Unexpected empty block (block-no-empty)\\\\n6:10 Expected \\\\\\\\\\"#000000\\\\\\\\\\" to be \\\\\\\\\\"black\\\\\\\\\\" (color-named)');
});
"
`;

exports[`Broccoli StyleLint Plugin Generated Tests when grouping is false generates correct passing test string 1`] = `
"QUnit.module('Stylelint');
QUnit.test('no-errors.scss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'no-errors.scss should pass stylelint');
});
"
`;

exports[`Broccoli StyleLint Plugin Generated Tests when grouping is true generates correct failing test string 1`] = `
"QUnit.module('Stylelint');

QUnit.test('has-errors.scss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(false, '1:15 Unexpected empty block (block-no-empty)\\\\n6:10 Expected \\\\\\\\\\"#000000\\\\\\\\\\" to be \\\\\\\\\\"black\\\\\\\\\\" (color-named)');
});

QUnit.test('more-errors.scss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(false, '1:15 Unexpected empty block (block-no-empty)\\\\n6:10 Expected \\\\\\\\\\"#000000\\\\\\\\\\" to be \\\\\\\\\\"black\\\\\\\\\\" (color-named)');
});



"
`;

exports[`Broccoli StyleLint Plugin Generated Tests when grouping is true generates correct passing test string 1`] = `
"QUnit.module('Stylelint');



QUnit.test('no-errors.scss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'no-errors.scss should pass stylelint');
});

QUnit.test('no-errors0.scss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'no-errors0.scss should pass stylelint');
});

"
`;

exports[`Broccoli StyleLint Plugin Generated Tests when using multiple languages generates happy path tests for each language 1`] = `
"QUnit.module('Stylelint');

QUnit.test('style.css should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'style.css should pass stylelint');
});

QUnit.test('style.less should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'style.less should pass stylelint');
});

QUnit.test('style.sass should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'style.sass should pass stylelint');
});

QUnit.test('style.scss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'style.scss should pass stylelint');
});

QUnit.test('style.sss should pass stylelint', function(assert) {
  assert.expect(1);
  assert.ok(true, 'style.sss should pass stylelint');
});

"
`;
